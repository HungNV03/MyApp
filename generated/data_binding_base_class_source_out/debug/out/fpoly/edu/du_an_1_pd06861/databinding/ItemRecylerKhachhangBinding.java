// Generated by view binder compiler. Do not edit!
package fpoly.edu.du_an_1_pd06861.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import fpoly.edu.du_an_1_pd06861.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemRecylerKhachhangBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final ImageView ivEdit;

  @NonNull
  public final ImageView ivXoa;

  @NonNull
  public final TextView tnCccd;

  @NonNull
  public final TextView tnIdkh;

  @NonNull
  public final TextView tnPhone;

  @NonNull
  public final TextView tnTenkh;

  private ItemRecylerKhachhangBinding(@NonNull CardView rootView, @NonNull ImageView ivEdit,
      @NonNull ImageView ivXoa, @NonNull TextView tnCccd, @NonNull TextView tnIdkh,
      @NonNull TextView tnPhone, @NonNull TextView tnTenkh) {
    this.rootView = rootView;
    this.ivEdit = ivEdit;
    this.ivXoa = ivXoa;
    this.tnCccd = tnCccd;
    this.tnIdkh = tnIdkh;
    this.tnPhone = tnPhone;
    this.tnTenkh = tnTenkh;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemRecylerKhachhangBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemRecylerKhachhangBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_recyler_khachhang, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemRecylerKhachhangBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ivEdit;
      ImageView ivEdit = ViewBindings.findChildViewById(rootView, id);
      if (ivEdit == null) {
        break missingId;
      }

      id = R.id.ivXoa;
      ImageView ivXoa = ViewBindings.findChildViewById(rootView, id);
      if (ivXoa == null) {
        break missingId;
      }

      id = R.id.tnCccd;
      TextView tnCccd = ViewBindings.findChildViewById(rootView, id);
      if (tnCccd == null) {
        break missingId;
      }

      id = R.id.tnIdkh;
      TextView tnIdkh = ViewBindings.findChildViewById(rootView, id);
      if (tnIdkh == null) {
        break missingId;
      }

      id = R.id.tnPhone;
      TextView tnPhone = ViewBindings.findChildViewById(rootView, id);
      if (tnPhone == null) {
        break missingId;
      }

      id = R.id.tnTenkh;
      TextView tnTenkh = ViewBindings.findChildViewById(rootView, id);
      if (tnTenkh == null) {
        break missingId;
      }

      return new ItemRecylerKhachhangBinding((CardView) rootView, ivEdit, ivXoa, tnCccd, tnIdkh,
          tnPhone, tnTenkh);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
